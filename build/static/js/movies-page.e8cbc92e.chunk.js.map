{"version":3,"sources":["components/InputForm/InputForm.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/InputForm/InputForm.js","pages/MoviesPage.js"],"names":["module","exports","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","InputForm","onSubmit","useState","movieQuery","setMovieQuery","location","useLocation","history","useHistory","className","s","formWrapper","form","e","preventDefault","trim","toast","warn","search","input","onChange","currentTarget","toLowerCase","type","autoComplete","autoFocus","placeholder","button","MoviesList","lazy","HomeView","inputValue","setInputValue","searchedMovies","setSearchedMovies","useEffect","searchQuery","URLSearchParams","get","getMoviesBySearch","then","mowiesList","results","error","PageHeading","text","fallback","Loader","movies"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,YAAc,+BAA+B,KAAO,wBAAwB,MAAQ,yBAAyB,OAAS,4B,yICDzH,SAASC,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,ECVT,SAASQ,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GAEvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GACvCC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOZ,OAAOa,yBAAyBP,EAAQM,GAAKV,eAEtDM,EAAKM,KAAKC,MAAMP,EAAME,GAGxB,OAAOF,EAGM,SAASQ,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACNb,EAAQL,OAAOqB,IAAS,GAAMC,SAAQ,SAAUxB,GAC9C,EAAemB,EAAQnB,EAAKuB,EAAOvB,OAE5BE,OAAOuB,0BAChBvB,OAAOwB,iBAAiBP,EAAQjB,OAAOuB,0BAA0BF,IAEjEhB,EAAQL,OAAOqB,IAASC,SAAQ,SAAUxB,GACxCE,OAAOC,eAAegB,EAAQnB,EAAKE,OAAOa,yBAAyBQ,EAAQvB,OAKjF,OAAOmB,E,4BC1BM,SAASQ,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAClC,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACMC,EAAWC,cACXC,EAAUC,cAuBhB,OACE,qBAAKC,UAAWC,IAAEC,YAAlB,SACE,uBACEF,UAAWC,IAAEE,KACbX,SAnBqB,SAAAY,GAGzB,GAFAA,EAAEC,iBAEwB,KAAtBX,EAAWY,OACb,OAAOC,IAAMC,KAAK,4BAGpBhB,EAASE,GACTC,EAAc,IACdG,EAAQlB,KAAR,OACKgB,GADL,IAEEa,OAAO,SAAD,OAAWf,OAMjB,UAIE,uBACEM,UAAWC,IAAES,MACb7C,MAAO6B,EACPiB,SA7Bc,SAAAP,GACpBT,EAAcS,EAAEQ,cAAc/C,MAAMgD,gBA6B9BC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,kBAGd,wBAAQjB,UAAWC,IAAEiB,OAAQJ,KAAK,SAAlC,SACE,iDCxCV,IAAMK,EAAaC,gBAAK,kBACtB,2CAMa,SAASC,IACtB,MAAoC5B,mBAAS,IAA7C,mBAAO6B,EAAP,KAAmBC,EAAnB,KACA,EACE9B,mBAAS,MADX,mBAAO+B,EAAP,KAAuBC,EAAvB,KAEM7B,EAAWC,cAEjB6B,qBAAU,WACR,IAAMC,EAAc,IAAIC,gBACtBhC,EAASa,QACToB,IAAI,SAEc,OAAhBF,GAIJJ,EAAcI,KACb,CAAC/B,IAEJ8B,qBAAU,WACHJ,GAILQ,YAAkBR,GAAYS,MAAK,SAAAC,GACC,IAA9BA,EAAWC,QAAQ/C,OAMvBuC,EAAkBO,EAAWC,SAL3B1B,IAAM2B,MAAN,iCAC4BZ,EAD5B,YAOH,CAACA,IAOJ,OACE,qCACE,cAACa,EAAA,EAAD,CACEC,KACEd,EAAU,6BACgBA,EADhB,KAEN,4BAGR,cAAC/B,EAAD,CAAWC,SAbE,SAAAE,GACf6B,EAAc7B,MAaX8B,GAA4C,IAA1BA,EAAetC,OAChC,cAAC,WAAD,CAAUmD,SAAU,cAACC,EAAA,EAAD,IAApB,SACE,cAACnB,EAAD,CAAYoB,OAAQf,MAGtB","file":"static/js/movies-page.e8cbc92e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"InputForm_formWrapper__3kAb0\",\"form\":\"InputForm_form__24J1U\",\"input\":\"InputForm_input__1Yiun\",\"button\":\"InputForm_button__sJyhI\"};","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useState } from 'react';\r\nimport { useLocation, useHistory } from 'react-router';\r\nimport PropTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport s from './InputForm.module.css';\r\n\r\nexport default function InputForm({ onSubmit }) {\r\n  const [movieQuery, setMovieQuery] = useState('');\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  // запись нормализированного запроса в стейт movieQuery\r\n  const onInputChange = e => {\r\n    setMovieQuery(e.currentTarget.value.toLowerCase());\r\n  };\r\n\r\n  // передача в MoviesView строки movieQuery и сброс стейта\r\n  const handleSubmitButton = e => {\r\n    e.preventDefault();\r\n\r\n    if (movieQuery.trim() === '') {\r\n      return toast.warn('Please enter your query!');\r\n    }\r\n\r\n    onSubmit(movieQuery);\r\n    setMovieQuery('');\r\n    history.push({\r\n      ...location,\r\n      search: `query=${movieQuery}`,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={s.formWrapper}>\r\n      <form\r\n        className={s.form}\r\n        onSubmit={handleSubmitButton}\r\n      >\r\n        <input\r\n          className={s.input}\r\n          value={movieQuery}\r\n          onChange={onInputChange}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search movies\"\r\n        />\r\n\r\n        <button className={s.button} type=\"submit\">\r\n          <span>Search</span>\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nInputForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import { useEffect, useState, lazy, Suspense } from 'react';\r\nimport { useLocation } from 'react-router';\r\n\r\nimport Loader from '../components/Loader';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { getMoviesBySearch } from '../apiServises/MoviedbAPI';\r\nimport PageHeading from '../components/PageHeading';\r\nimport InputForm from '../components/InputForm/InputForm';\r\n\r\nconst MoviesList = lazy(() =>\r\n  import(\r\n    '../components/MoviesList/MoviesList'\r\n    /* webpackChunkName: \"movies-list\" */\r\n  ),\r\n);\r\n\r\nexport default function HomeView() {\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [searchedMovies, setSearchedMovies] =\r\n    useState(null);\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    const searchQuery = new URLSearchParams(\r\n      location.search,\r\n    ).get('query');\r\n\r\n    if (searchQuery === null) {\r\n      return;\r\n    }\r\n\r\n    setInputValue(searchQuery);\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    if (!inputValue) {\r\n      return;\r\n    }\r\n    // фетч фильмов по запросу\r\n    getMoviesBySearch(inputValue).then(mowiesList => {\r\n      if (mowiesList.results.length === 0) {\r\n        toast.error(\r\n          `No movies with query: \"${inputValue}\".`,\r\n        );\r\n        return;\r\n      }\r\n      setSearchedMovies(mowiesList.results);\r\n    });\r\n  }, [inputValue]);\r\n\r\n  // запись запроса фильма в стейт\r\n  const onSubmit = movieQuery => {\r\n    setInputValue(movieQuery);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <PageHeading\r\n        text={\r\n          inputValue\r\n            ? `Results by query: \"${inputValue}\"`\r\n            : 'Please enter your query'\r\n        }\r\n      />\r\n      <InputForm onSubmit={onSubmit} />\r\n      {searchedMovies && searchedMovies.length !== 0 ? (\r\n        <Suspense fallback={<Loader />}>\r\n          <MoviesList movies={searchedMovies} />\r\n        </Suspense>\r\n      ) : (\r\n        <p></p>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}